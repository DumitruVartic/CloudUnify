@page "/add-storage"
@namespace CloudUnify.Maui.Components.Pages
@inject NavigationService NavigationService

<div class="add-storage-container">
    <div class="header">
        <button class="back-button" @onclick="() => NavigationService.NavigateBackAsync()">
            <i class="fas fa-arrow-left"></i>
        </button>
        <h1>Add New Storage</h1>
    </div>

    <div class="providers-grid">
        <div class="provider-card" @onclick="@(() => ConnectProvider("google-drive"))">
            <img src="images/providers/google-drive.png" alt="Google Drive"/>
            <h3>Google Drive</h3>
            <p>Connect your Google Drive account</p>
            <div class="connect-button">
                <i class="fas fa-plug"></i>
                Connect
            </div>
        </div>

        <div class="provider-card" @onclick="@(() => ConnectProvider("dropbox"))">
            <img src="images/providers/dropbox.png" alt="Dropbox"/>
            <h3>Dropbox</h3>
            <p>Connect your Dropbox account</p>
            <div class="connect-button">
                <i class="fas fa-plug"></i>
                Connect
            </div>
        </div>

        <div class="provider-card" @onclick="@(() => ConnectProvider("onedrive"))">
            <img src="images/providers/onedrive.png" alt="OneDrive"/>
            <h3>OneDrive</h3>
            <p>Connect your OneDrive account</p>
            <div class="connect-button">
                <i class="fas fa-plug"></i>
                Connect
            </div>
        </div>

        <div class="provider-card" @onclick="@(() => ConnectProvider("box"))">
            <img src="images/providers/box.png" alt="Box"/>
            <h3>Box</h3>
            <p>Connect your Box account</p>
            <div class="connect-button">
                <i class="fas fa-plug"></i>
                Connect
            </div>
        </div>
    </div>
</div>

@code {

    private async Task ConnectProvider(string provider) {
// TODO: Implement provider connection
        await NavigationService.NavigateToStoragesAsync();
    }

}

<style>
    .add-storage-container {
        padding: 20px;
        background-color: #f5f7fa;
        min-height: 100vh;
    }

    .header {
        display: flex;
        align-items: center;
        margin-bottom: 2rem;
    }

    .back-button {
        background: none;
        border: none;
        font-size: 1.5rem;
        color: #4a5568;
        cursor: pointer;
        padding: 0.5rem;
        margin-right: 1rem;
    }

    h1 {
        font-size: 2rem;
        color: #2d3748;
        margin: 0;
    }

    .providers-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 1.5rem;
        padding: 1rem;
    }

    .provider-card {
        background: white;
        border-radius: 12px;
        padding: 1.5rem;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        cursor: pointer;
        transition: transform 0.2s, box-shadow 0.2s;
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
    }

    .provider-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    }

    .provider-card img {
        width: 64px;
        height: 64px;
        margin-bottom: 1rem;
    }

    .provider-card h3 {
        font-size: 1.25rem;
        color: #2d3748;
        margin: 0.5rem 0;
    }

    .provider-card p {
        color: #718096;
        margin: 0.5rem 0 1rem;
        font-size: 0.9rem;
    }

    .connect-button {
        background-color: #4299e1;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.9rem;
    }

    .connect-button i {
        font-size: 0.8rem;
    }
</style> 